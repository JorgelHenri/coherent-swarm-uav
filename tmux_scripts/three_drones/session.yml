name: simulation
root: ./
startup_window: status
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=f450; export WORLD_NAME=simulation; export SENSORS="garmin_down"
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch gui:=true world_name:=grass_plane
  - status:
      layout: tiled
      panes:
        - 'export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_status status.launch'
        - 'export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_status status.launch'
        - 'export UAV_NAME=uav3; waitForSimulation; roslaunch mrs_uav_status status.launch'
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn  "1 $UAV_TYPE --pos_file `pwd`/custom_configs/uav1_pos.yaml --enable-rplidar --enable-rangefinder --enable-ground-truth --enable-dual-uv-cameras --enable-back-uv-camera --uvcam-occlusions --uvcam_calib_file \"$(rospack find uvdar_core)/include/OCamCalib/config/calib_results_bf_uv_fe.txt\" --enable-uv-leds --uvled_s_l 0 --uvled_s_r 0"
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn  "2 $UAV_TYPE --pos_file `pwd`/custom_configs/uav2_pos.yaml --enable-rplidar --enable-rangefinder --enable-ground-truth --enable-dual-uv-cameras --enable-back-uv-camera --uvcam-occlusions --uvcam_calib_file \"$(rospack find uvdar_core)/include/OCamCalib/config/calib_results_bf_uv_fe.txt\" --enable-uv-leds --uvled_s_l 1 --uvled_s_r 1"
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn  "3 $UAV_TYPE --pos_file `pwd`/custom_configs/uav3_pos.yaml --enable-rplidar --enable-rangefinder --enable-ground-truth --enable-dual-uv-cameras --enable-back-uv-camera --uvcam-occlusions --uvcam_calib_file \"$(rospack find uvdar_core)/include/OCamCalib/config/calib_results_bf_uv_fe.txt\" --enable-uv-leds --uvled_s_l 2 --uvled_s_r 2"
  - control:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_uav_general core.launch config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_uav_general core.launch config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_NAME=uav3; waitForOdometry; roslaunch mrs_uav_general core.launch config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
  - automatic_start:
      layout: tiled
      panes:
        - 'export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch'
        - 'export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch'
        - 'export UAV_NAME=uav3; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch'
  - bumper:
      layout: tiled
      panes:
        - 'export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_bumper bumper.launch config_mpc_tracker:=./custom_configs/mpc_tracker.yaml'
        - 'export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_bumper bumper.launch config_mpc_tracker:=./custom_configs/mpc_tracker.yaml'
        - 'export UAV_NAME=uav3; waitForOdometry; roslaunch mrs_bumper bumper.launch config_mpc_tracker:=./custom_configs/mpc_tracker.yaml'
  - takeoff:
      layout: tiled
      panes:
        # #{ uav1
        - 'export UAV_NAME=uav1;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
        # #{ uav2
        - 'export UAV_NAME=uav2;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        #}
        # #{ uav3
        - 'export UAV_NAME=uav3;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
  - uv_observer:
      layout: even-vertical
      panes:
        - waitForCompile; gz world --pause=0; sleep 6;  export UAV_NAME=uav1; waitForControl; roslaunch uvdar_core sim_three_sided.launch
        - waitForCompile; gz world --pause=0; sleep 6;  export UAV_NAME=uav2; waitForControl; roslaunch uvdar_core sim_three_sided.launch
        - waitForCompile; gz world --pause=0; sleep 6;  export UAV_NAME=uav3; waitForControl; roslaunch uvdar_core sim_three_sided.launch
  - kalman_filter:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; waitForControl; roslaunch uvdar_core uvdar_kalman_identified_3.launch output_frame:=$UAV_NAME/stable_origin
        - export UAV_NAME=uav2; waitForControl; roslaunch uvdar_core uvdar_kalman_identified_3.launch output_frame:=$UAV_NAME/stable_origin
        - export UAV_NAME=uav3; waitForControl; roslaunch uvdar_core uvdar_kalman_identified_3.launch output_frame:=$UAV_NAME/stable_origin
  - slow_down:
      layout: even-vertical
      panes:
        - history -s gz physics -u 80
  - coherent_swarming:
      layout: even-vertical
      synchronize: after
      panes:
        - export UAV_NAME=uav1; history -s roslaunch coherent-swarm-uav-default Coherent_swarm.launch config_coherent:=./custom_configs/Coherent.yaml goal:=./custom_configs/goal.yaml
        - export UAV_NAME=uav2; history -s roslaunch coherent-swarm-uav-default Coherent_swarm.launch config_coherent:=./custom_configs/Coherent.yaml goal:=./custom_configs/goal.yaml
        - export UAV_NAME=uav3; history -s roslaunch coherent-swarm-uav-default Coherent_swarm.launch config_coherent:=./custom_configs/Coherent.yaml goal:=./custom_configs/goal.yaml
