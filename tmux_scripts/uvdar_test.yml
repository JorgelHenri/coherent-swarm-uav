name: simulation
root: ./
startup_window: kalman_filter 
pre_window: export RUN_TYPE=simulation; export UAV_TYPE=f450; export WORLD_NAME=simulation; export ODOMETRY_TYPE=gps
windows:
  - roscore:
      layout: even-vertical
      panes:
        - roscore
  - gazebo:
      layout: even-vertical
      panes:
        - waitForRos; roslaunch uvdar_core uvdar_gazebo.launch gui:=true
  - status:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; history -s waitForRos; history -s roslaunch mrs_uav_status status.launch
        - export UAV_NAME=uav2; history -s waitForRos; history -s roslaunch mrs_uav_status status.launch
  - spawn:
      layout: even-vertical
      panes:
        - waitForSimulation; spawn_uav 1 --$UAV_TYPE --run --delete --file "position1.csv" --enable-rangefinder --enable-ground-truth --enable-uv-leds --led-frequencies 6 6 --debug --enable-uv-camera --uv-camera-calibration-file "$(rospack find uvdar_core)/include/OCamCalib/config/calib_results_bf_uv_fe.txt"
        - waitForSimulation; spawn_uav 2 --$UAV_TYPE --run --delete --file "position2.csv" --enable-rangefinder --enable-ground-truth --enable-uv-leds --led-frequencies 15 15 --debug --enable-uv-camera --uv-camera-calibration-file "$(rospack find uvdar_core)/include/OCamCalib/config/calib_results_bf_uv_fe.txt"
  - control:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; history -s waitForOdometry; history -s roslaunch mrs_uav_general core.launch config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_NAME=uav2; history -s waitForOdometry; history -s roslaunch mrs_uav_general core.launch config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
  - autostart:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; history -s waitForSimulation; history -s roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav2; history -s waitForSimulation; history -s roslaunch mrs_uav_general automatic_start.launch
  - takeoff:
      layout: even-vertical
      panes:
        - 'export UAV_NAME=uav1;
          history -s waitForControl;
          history -s rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 0.1;
          history -s rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        - 'export UAV_NAME=uav2;
          history -s waitForControl;
          history -s rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 0.1;
          history -s rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
  - rviz:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; history -s waitForControl; history -s roslaunch uvdar_core multi_frequency_test_rviz.launch
  - uv_observer:
      layout: even-vertical
      panes:
        - waitForCompile; gz world --pause=0; sleep 6;  export UAV_NAME=uav1; history -s waitForControl; history -s roslaunch uvdar_core multi_frequency_test.launch
        - waitForCompile; gz world --pause=0; sleep 6;  export UAV_NAME=uav2; history -s waitForControl; history -s roslaunch uvdar_core multi_frequency_test.launch
  - kalman_filter:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; history -s waitForControl; history -s roslaunch uvdar_core uvdar_kalman_identified.launch output_frame:=$UAV_NAME/stable_origin
        - export UAV_NAME=uav2; history -s waitForControl; history -s roslaunch uvdar_core uvdar_kalman_identified.launch output_frame:=$UAV_NAME/stable_origin
  - slow_down:
      layout: even-vertical
      panes:
        - waitForSimulation; waitForRos; sleep 15; gz physics -u 100
  - goto:
      layout: even-vertical
      panes:
        - 'history -s rosservice call /uav3/control_manager/goto_fcu \"goal: \[0.0, 0.0, 0.0, 0.7\]\"'
