name: simulation
root: ./
startup_window: status
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=f450; export WORLD_NAME=simulation
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch gui:=true world_name:=grass_plane
  - status:
      layout: tiled
      panes:
        - 'export UAV_NAME=uav1; history -s waitForSimulation; history -s roslaunch mrs_uav_status status.launch'
        - 'export UAV_NAME=uav2; history -s waitForSimulation; history -s roslaunch mrs_uav_status status.launch'
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; spawn_uav 1 --$UAV_TYPE --file uav1_pos.yaml --run --delete --enable-rangefinder --enable-rangefinder-up --enable-rplidar --enable-ground-truth --enable-uv-leds --led-frequencies 6 6 --debug --enable-uv-camera --uv-camera-calibration-file "$(rospack find uvdar_core)/include/OCamCalib/config/calib_results_bf_uv_fe.txt"
        - waitForSimulation; spawn_uav 2 --$UAV_TYPE --file uav2_pos.yaml --run --delete --enable-rangefinder --enable-rangefinder-up --enable-rplidar --enable-ground-truth --enable-uv-leds --led-frequencies 15 15 --debug --enable-uv-camera --uv-camera-calibration-file "$(rospack find uvdar_core)/include/OCamCalib/config/calib_results_bf_uv_fe.txt"
  - control:
      layout: tiled
      panes:
        - 'export UAV_NAME=uav1; history -s waitForOdometry; history -s roslaunch mrs_uav_general core.launch DEBUG:=false config_mpc_tracker:=./custom_configs/mpc_tracker.yaml'
        - 'export UAV_NAME=uav2; history -s waitForOdometry; history -s roslaunch mrs_uav_general core.launch DEBUG:=false config_mpc_tracker:=./custom_configs/mpc_tracker.yaml'
  - automatic_start:
      layout: tiled
      panes:
        - 'export UAV_NAME=uav1; history -s waitForSimulation; history -s roslaunch mrs_uav_general automatic_start.launch'
        - 'export UAV_NAME=uav2; history -s waitForSimulation; history -s roslaunch mrs_uav_general automatic_start.launch'
  - bumper:
      layout: tiled
      panes:
        - 'export UAV_NAME=uav1; history -s waitForOdometry; history -s roslaunch mrs_bumper bumper.launch'
        - 'export UAV_NAME=uav2; history -s waitForOdometry; history -s roslaunch mrs_bumper bumper.launch'
  - takeoff:
      layout: tiled
      panes:
        # #{ uav1
        - 'history -s export UAV_NAME=uav1;
          history -s waitForControl;
          history -s rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          history -s rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
        # #{ uav2
        - 'export UAV_NAME=uav2;
          history -s waitForControl;
          history -s rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          history -s rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
  - uv_observer:
      layout: even-vertical
      panes:
        - waitForCompile; gz world --pause=0; sleep 6;  export UAV_NAME=uav1; history -s waitForControl; history -s roslaunch uvdar_core multi_frequency_test.launch
        - waitForCompile; gz world --pause=0; sleep 6;  export UAV_NAME=uav2; history -s waitForControl; history -s roslaunch uvdar_core multi_frequency_test.launch
  - kalman_filter:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; history -s waitForControl; history -s roslaunch uvdar_core uvdar_kalman_identified.launch output_frame:=$UAV_NAME/stable_origin
        - export UAV_NAME=uav2; history -s waitForControl; history -s roslaunch uvdar_core uvdar_kalman_identified.launch output_frame:=$UAV_NAME/stable_origin
  - slow_down:
      layout: even-vertical
      panes:
        - waitForSimulation; waitForRos; sleep 15; gz physics -u 100
  - rviz:
      layout: tiled
      panes:
        - history -s waitForSimulation; history -s roslaunch mrs_uav_testing rviz.launch name:=bumper_test
        - history -s waitForControl; history -s roslaunch mrs_uav_testing rviz.launch
        - history -s waitForControl; history -s roslaunch mrs_rviz_plugins load_robot.launch
  - easy_control:
      layout: tiled
      panes:
        - history -s waitForControl; history -s waitForControl; roslaunch mrs_rviz_plugins rviz_interface.launch
  - layout:
      layout: tiled
      panes:
        - waitForControl; sleep 3; ~/.i3/layout_manager.sh ./layout.json
  - coherent_swarming:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; history -s roslaunch coherent-swarm-uav Coherent_swarm.launch
        - export UAV_NAME=uav2; history -s roslaunch coherent-swarm-uav Coherent_swarm.launch
        # - export UAV_NAME=uav3; roslaunch coherent_swarming simulation.launch
